name: Faucet Tests

on:
  schedule:
    - cron: '* * * * 0'

env:
  FAUCET_TEST_IMG: "faucet/tests"
  SHARDARGS: "--privileged --sysctl net.ipv6.conf.all.disable_ipv6=0 --ulimit core=99999999999:99999999999 -v /var/local/lib/docker:/var/lib/docker"
  FILES_CHANGED: "all"
  CODECHECK_PY_VER: 3.6

jobs:

  generative-testing:
    name: Faucet Generative Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        MATRIX_SHARD: [--generative_unit, --generative_integration]
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - if: ${{ github.event.before }}
        name: Get file changes
        id: file_changes
        uses: trilom/file-changes-action@v1.2.4
        with:
          output: ' '
      - if: ${{ steps.file_changes.outputs.files }}
        name: Compare file changes
        run: |
          FILES_CHANGED="${{ steps.file_changes.outputs.files }}"
          PY_FILES_CHANGED=$(echo "${{ steps.file_changes.outputs.files }}" | tr ' ' '\n' | grep -E ".py$" | tr '\n' ' ')
          RQ_FILES_CHANGED=$(echo "${{ steps.file_changes.outputs.files }}" | tr ' ' '\n' | grep -E "requirements(.*)txt$" | tr '\n' ' ')
          DOC_FILES_CHANGED=$(echo "${{ steps.file_changes.outputs.files }}" | tr ' ' '\n' | grep -E "docs/**" | tr '\n' ' ')
          echo "Files changed: ${FILES_CHANGED}"
          echo "Python code changed: ${PY_FILES_CHANGED}"
          echo "Requirement changes: ${RQ_FILES_CHANGED}"
          echo "Documentation changes: ${DOC_FILES_CHANGED}"
          echo ::set-env name=FILES_CHANGED::${FILES_CHANGED}
          echo ::set-env name=PY_FILES_CHANGED::${PY_FILES_CHANGED}
          echo ::set-env name=RQ_FILES_CHANGED::${RQ_FILES_CHANGED}
          echo ::set-env name=DOC_FILES_CHANGED::${DOC_FILES_CHANGED}
      - if: ${{ env.FILES_CHANGED == 'all' || env.PY_FILES_CHANGED || env.RQ_FILES_CHANGED }}
        name: Setup docker test requirements
        run: |
          ulimit -c unlimited
          echo '/var/tmp/core.%h.%e.%t' | sudo tee /proc/sys/kernel/core_pattern
          sudo modprobe openvswitch
          sudo modprobe ebtables
      - if: ${{ env.FILES_CHANGED == 'all' || env.PY_FILES_CHANGED || env.RQ_FILES_CHANGED }}
        name: Build docker
        run: docker build --pull -t ${FAUCET_TEST_IMG} -f Dockerfile.tests . || exit 1
      - if: ${{ env.FILES_CHANGED == 'all' || env.PY_FILES_CHANGED || env.RQ_FILES_CHANGED }}
        name: Run docker
        run: sudo docker run ${SHARDARGS} -v $HOME/.cache/pip:/var/tmp/pip-cache -e FAUCET_TESTS="${{ matrix.MATRIX_SHARD }}" -t ${FAUCET_TEST_IMG} || exit 1
      - name: Detect core dumps
        run: if [ ls -1 /var/tmp/core* > /dev/null 2>&1 ]; then exit 1; fi
